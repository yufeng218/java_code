<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.my.spring.hibernate"></context:component-scan>
	
	<!-- 1、配置数据源 -->
	<!-- (1) 导入资源文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- (2) 配置c3p0数据源 -->
	<bean id="dataSource" 
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		
		<property name="initialPoolSize" value="${jdbc.initPoolSize}"></property>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
	</bean>
	
	<!-- 2、配置Hibernate的SessionFactory实例，通过Spring提供的LocalSessionFactoryBean配置 -->
	<bean id="sessionFactory" 
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 配置数据源属性 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate配置文件位置及名称 -->
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
		
		<!-- 使用hibernateProperties 来配置Hibernate原生的属性
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		 -->
		
		<!-- 配置hibernate映射文件的位置及名称，可以使用通配符 -->
		<property name="mappingLocations" 
			value="classpath:com/my/spring/hibernate/entities/*.hbm.xml"></property>
	</bean>
	
	<!-- 3、配置Spring的声明式事务 -->
	<!-- (1) 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- (2) 配置事务属性，需要关联事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- (3) 配置事务切点，并把切点和事务属性关联起来 -->
	<aop:config>
		<aop:pointcut id="txpointcut" 
			expression="execution(* com.my.spring.hibernate.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txpointcut"/>
	</aop:config>
	
</beans>

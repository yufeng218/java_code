
需求描述：
   1、完成影片连锁企业租赁管理系统，可以计算每一位客户的消费金额
   和影片的详细信息，金额根据影片的类型和租赁的日期来进行计算。
   2、客户把影片分为3类进行管理
    A:最新电影  B:普通电影  C:儿童电影  
   3、费用计算规则如下：
     a：是普通电影，如果租赁小于2天，费用为2元钱。如果租赁大于两天，
     	费用是租期减去2，每天1.5元
     b:如果是新片电影，费用为每天3元
     c:是儿童电影，如果租赁小于3天，费用为1.5元钱，如果租赁大于三天，
     	费用是租赁减去3，每天1.5元
   4、每次客户租赁电影可以为客户累计积分，规则是每次累计增加1分。如果
   是新片，并且租期大于1天，再增加一分
   5、暂且不要考虑系统界面的问题和系统存储问题

===============================================================

version1.0
目的：
   1、完成需求
   2、能够了解面向对象的设计
   
===============================================================

version2.0
	1、把容器的管理单独写一个类操作：MyArrayList
	   操作扩容添加元素(添加元素、查找某个元素、判断是否包含)
	2、容器提供遍历的方式（设计：如果你提供一个聚集就应该提供遍历所有元素的和查找某个元素的方式
	                                            模式：迭代器）
	  扩展：容器插入到某个位置，移除元素

    3、将Customer类的printMessage方法显于臃肿，函数的功能也应该单一；
    	既做了打印、又做了计算费用、还做了计算积分，完全可以写成多个方法：
    	(1)抽取getPrice方法，注意eclipse工具的使用；
    	(2)抽取getFre方法；
    	(3)查看抽取的函数有什么问题；

===============================================================

version3.0
	问题：version3.0的进行简单重构之后条理已经清晰，
	但是发现getPrice、getFre方法所用到的数据都来自于Rental类；
	在面向对象的设计中，谁拥有对象，谁拥有行为；（否则就是封装的问题，破坏封装性，
	特别是这种行为的数据全部来自于其他的一个类中，代码的坏味道的一种）
	
	通过eclipse --> refactor --> move --> 进行选择
	方法首先移动到Rental类中，移入后发现	最重要的数据还是来自于Movie类，
	只是天数来自于Rental类中；
	（看到Moive相关的数据操作比较复杂，所以需要继续移动方法）

===============================================================

version4.0
	找出变化：由于电影的种类发生了变化，价钱的计算也发生了变化，积分也发生了变化；
	抽象：抽取Price类（抽象类）
		三个子类：ChildreMovie、RMovie、NewMovie

总结：将来写程序希望尽量可以扩展，但是对于原来的代码要少修改，因为一旦修改以前的代码就需要
	编译、测试、发布等工作；
	
	设计到了：重构、设计模式、设计理念
	









